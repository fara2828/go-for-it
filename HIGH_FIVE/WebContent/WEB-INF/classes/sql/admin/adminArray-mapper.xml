<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>

	<entry key="selectMembers">
		SELECT 
			  USER_NO,
			  USER_ID,
			  USER_PWD,
			  USER_NAME,
			  NICKNAME,
			  EMAIL,
			  BIRTHDATE,
			  GENDER,
			  POST,
			  ADDRESS,
			  ADDRESS_DETAIL,
			  PHONE,
			  USER_TYPE,
			  USER_LEVEL,
			  ENROLL_DATE,
			  MODIFY_DATE,
			  PROFILE,
			  STATUS
		  FROM
		      MEMBER
		 WHERE
		      STATUS = 'N'
	</entry>
	
	<entry key="selectChallenge">
		SELECT
			  CHALL_NO,
			  USER_NO,
			  CHALL_NAME,
			  CHALL_CATEGORY,
			  CHALL_POSTDATE,
		 	  CHALL_START,
		 	  CHALL_END,
		 	  CHALL_FREQUENCY,
		 	  CHALL_PARTICIPANT,
		 	  CHALL_PARTICIPANT_NOW,
		 	  CHALL_HOWTO,
		 	  CHALL_PHOTO_EXP,
		 	  CHALL_INTRODUCTION,
		 	  CHALL_THUMBNAIL,
			  CHALL_PUBLIC,
			  C.STATUS,
			  CHALL_COUNT,
              M.NICKNAME
		  FROM
		      CHALLENGE C
          JOIN
              MEMBER M USING (USER_NO)
		 WHERE
		      C.STATUS = 'N'
	</entry>
	
	<entry key="selectCrowd">
<!--   	SELECT  
              CROWD_NO,
              USER_NO,
              CROWD_NAME,
              CROWD_CATEGORY,
              CROWD_POSTDATE,
              CROWD_EXP, 
              CROWD_THUMBNAIL
          FROM
              CROWD_CHALLENGE
         ORDER
            BY
              CROWD_NO DESC
-->	
		SELECT 
			  c.*
			  , T.CROWD_GOODIDEA
			  , T.CROWD_MAKEIT
			  , NICKNAME 
		 FROM 
		      CROWD_CHALLENGE c
		 LEFT JOIN 
		     (SELECT 
		             CROWD_NO
		     		,SUM(CROWD_GOODIDEA) as CROWD_GOODIDEA
		     		,SUM(CROWD_MAKEIT) as CROWD_MAKEIT 
		       FROM 
		       		CROWD_ONGOING 
		      GROUP 
		         BY 
		           CROWD_NO
		           ) T on c.CROWD_NO = T.CROWD_NO 
		           
		  JOIN 
		       MEMBER M 
		    ON
		      (c.USER_NO = M.USER_NO)
		  WHERE
		       c.STATUS = 'Y'    
		  ORDER 
		     BY 
		       T.CROWD_MAKEIT DESC NULLS LAST
	</entry>
	
<!--<entry key="selectChallengeAdmin">
		SELECT
			  CHALL_NO,
			  USER_NO,
			  CHALL_NAME,
			  CHALL_CATEGORY,
			  CHALL_POSTDATE,
		 	  CHALL_START,
		 	  CHALL_END,
		 	  CHALL_FREQUENCY,
		 	  CHALL_PARTICIPANT,
		 	  CHALL_PARTICIPANT_NOW,
		 	  CHALL_HOWTO,
		 	  CHALL_PHOTO_EXP,
		 	  CHALL_INTRODUCTION,
		 	  CHALL_THUMBNAIL,
			  CHALL_PUBLIC,
			  STATUS,
			  CHALL_COUNT
		  FROM
		      CHALLENGE
		 WHERE
		      STATUS = 'Y'			  
	</entry>
 -->	
	<entry key="selectContact">
		SELECT			  
              CONTACT_NO,
              Q_TITLE,
              Q_CONTENT,
              ANSWER_YN,
              A_CONTENT,
              USER_NO,
              C.STATUS,
              CONTACTDATE,
              USER_NAME,
              NICKNAME
	      FROM
	          CONTACT C
	      JOIN
	          MEMBER USING(USER_NO)
	     WHERE
	          C.STATUS = 'Y'
           AND
              ANSWER_YN = 'N'	      
	</entry>	
	
	<entry key="selectFaq">
		SELECT 
		      FAQ_NO,
		      FAQ_TITLE,
		      FAQ_CONTENT,
		      STATUS,
		      ENROLLDATE
		  FROM
		      FAQ
		 WHERE
		      STATUS = 'Y'
		 ORDER
		    BY
		      ENROLLDATE DESC   
	</entry>
	
	<entry key="selectNotice">
		SELECT
		       NO,
		       KIND,
		       TITLE,
		       CONTENT,
		       USER_NO,
		       ENROLLDATE,
		       N.STATUS
		  FROM
		       NOTICE N
		  JOIN
		       MEMBER USING(USER_NO)
		 WHERE
		       N.STATUS = 'Y'	
	</entry>
	
	<entry key="selectLevel">
		SELECT 
			  USER_NO,
			  USER_ID,
			  USER_PWD,
			  USER_NAME,
			  NICKNAME,
			  EMAIL,
			  BIRTHDATE,
			  GENDER,
			  POST,
			  ADDRESS,
			  ADDRESS_DETAIL,
			  PHONE,
			  USER_TYPE,
			  USER_LEVEL,
			  ENROLL_DATE,
			  MODIFY_DATE,
			  PROFILE,
			  STATUS
		  FROM
		      MEMBER
		 WHERE
		      STATUS = 'Y'
		 ORDER
		 	BY
		 	  USER_LEVEL DESC
	</entry>	
	
</properties>